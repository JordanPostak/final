{
  "swagger": "2.0",
  "info": {
    "title": "Final Project",
    "description": "API documentation for Final Project",
    "version": "1.0.0"
  },
  "host": "seerstoneapi.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/users/": {
    "get": {
      "tags": ["users"],
      "summary": "Retrieve all user profiles",
      "description": "This endpoint retrieves all user profiles.",
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "OK"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  "/users/{id}": {
    "get": {
      "tags": ["users"],
      "summary": "Get single profile",
      "description": "This endpoint retrieves a single user profile based on the id.",
      "produces": ["application/json"],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "OK"
        },
        "400": {
          "description": "Bad Request"
        },
        "404": {
          "description": "Not Found"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "put": {
      "tags": ["users"],
      "summary": "Update a user profile",
      "description": "This endpoint updates a user profile based on the user id.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "body",
          "in": "body",
          "schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "password": {
                "type": "string",
                "example": "1234"
              },
              "first_name": {
                "type": "string",
                "example": "John"
              },
              "last_name": {
                "type": "string",
                "example": "Doe"
              },
              "email": {
                "type": "string",
                "example": "john.doe@example.com"
              }
            }
          }
        }
      ],
      "responses": {
        "204": {
          "description": "No Content"
        },
        "401": {
          "description": "Unauthorized"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    },
    "delete": {
      "tags": ["users"],
      "summary": "Delete logged-in user profile",
      "description": "Deletes the user profile of the currently authenticated user.",
      "parameters": [],
      "responses": {
        "200": {
          "description": "User successfully deleted"
        },
        "401": {
          "description": "Unauthorized - User not logged in"
        },
        "404": {
          "description": "User not found"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  "/users/register": {
    "post": {
      "tags": ["users"],
      "summary": "Register a new user",
      "description": "This endpoint registers a new user.",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "string",
                "example": "12345"
              },
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "password": {
                "type": "string",
                "example": "1234"
              },
              "first_name": {
                "type": "string",
                "example": "John"
              },
              "last_name": {
                "type": "string",
                "example": "Doe"
              },
              "email": {
                "type": "string",
                "example": "john.doe@example.com"
              }
            },
            "required": ["user_id", "username", "password", "first_name", "last_name", "email"]
          }
        }
      ],
      "responses": {
        "201": {
          "description": "User successfully registered"
        },
        "400": {
          "description": "Bad Request"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  "/users/login": {
    "post": {
      "tags": ["users"],
      "summary": "Login to the application",
      "description": "This endpoint allows users to log in.",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": "johndoe"
              },
              "password": {
                "type": "string",
                "example": "1234"
              }
            },
            "required": ["username", "password"]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Login successful"
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "User not found"
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
    "/inspirations/": {
      "get": {
        "tags": ["inspirations"],
        "summary": "Retrieve all inspirations",
        "description": "This endpoint retrieves all inspirations.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["inspirations"],
        "summary": "Creates a new inspiration",
        "description": "This endpoint creates a new inspiration. Must be logged in.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": { "type": "string", "example": "any" },
                "type": { "type": "string", "example": "any" },
                "step": { "type": "string", "example": "any" },
                "parent_id": { "type": "string", "example": "any" },
                "child_id": { "type": "string", "example": "any" },
                "evidence": { "type": "string", "example": "any" },
                "acted_on": { "type": "string", "example": "any" },
                "planned": { "type": "string", "example": "any" },
                "reviewed": { "type": "string", "example": "any" },
                "recorded": { "type": "string", "example": "any" }
              },
              "required": ["user_id", "type", "step"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inspirations/{id}": {
      "get": {
        "tags": ["inspirations"],
        "summary": "Retrieves a single inspiration",
        "description": "This endpoint retrieves a single inspiration based on id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["inspirations"],
        "summary": "Update a single inspiration",
        "description": "This endpoint updates a single inspiration based on id. Must be logged in",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": { "type": "string", "example": "any" },
                "type": { "type": "string", "example": "any" },
                "step": { "type": "string", "example": "any" },
                "parent_id": { "type": "string", "example": "any" },
                "child_id": { "type": "string", "example": "any" },
                "evidence": { "type": "string", "example": "any" },
                "acted_on": { "type": "string", "example": "any" },
                "planned": { "type": "string", "example": "any" },
                "reviewed": { "type": "string", "example": "any" },
                "recorded": { "type": "string", "example": "any" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["inspirations"],
        "summary": "Delete an inspiration",
        "description": "This endpoint deletes an inspiration based on id. Must be logged in",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inspirations/user_id/{user_id}": {
      "get": {
        "tags": ["inspirations"],
        "summary": "Retrieve all inspirations of a particular user",
        "description": "This endpoint retrieves all inspirations based on the id of a particular user. Must be logged in",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inspirations/user_id/{user_id}/type/{type}": {
      "get": {
        "tags": ["inspirations"],
        "summary": "Retrieve all inspirations of a particular user and specific type",
        "description": "This endpoint retrieves all inspirations based on the id of a particular user and of a particular type. Must be logged in",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inspirations/user_id/{user_id}/step/{step}": {
      "get": {
        "tags": ["inspirations"],
        "summary": "Retrieve all inspirations of a particular user and specific step",
        "description": "This endpoint retrieves all inspirations based on the id of a particular user and of a particular step. Must be logged in",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "step",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/journals/": {
      "get": {
        "tags": ["journals"],
        "summary": "Retrieve all journal entries",
        "description": "This endpoint retrieves all journal entries.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["journals"],
        "summary": "Create a journal entry",
        "description": "This endpoint creates a journal entry. Must be logged in.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                },
                "date": {
                  "type": "string",
                  "example": "any"
                },
                "entry": {
                  "type": "string",
                  "example": "any"
                },
                "inspiration_id": {
                  "type": "string",
                  "example": "any"
                }
              },
              "required": ["user_id", "date", "entry", "inspiration_id"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/journals/{id}": {
      "get": {
        "tags": ["journals"],
        "summary": "Retrieve a single journal entry",
        "description": "This endpoint retrieves a single journal entry based on id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["journals"],
        "summary": "Update a journal entry",
        "description": "This endpoint updates a journal entry based on id. Must be logged in.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                },
                "date": {
                  "type": "string",
                  "example": "any"
                },
                "entry": {
                  "type": "string",
                  "example": "any"
                },
                "inspiration_id": {
                  "type": "string",
                  "example": "any"
                }
              },
              "required": ["user_id", "date", "entry", "inspiration_id"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["journals"],
        "summary": "Delete a journal entry",
        "description": "This endpoint deletes a journal entry based on id. Must be logged in.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/journals/user_id/{user_id}": {
      "get": {
        "tags": ["journals"],
        "summary": "Retrieve all journal entries by user",
        "description": "This endpoint retrieves all journal entries based on the id of a particular user. Must be logged in.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/journals/user_id/{user_id}/inspiration_id/{inspiration_id}": {
      "get": {
        "tags": ["journals"],
        "summary": "Retrieve all journal entries by user and by inspiration id",
        "description": "This endpoint retrieves all journal entries based on the id of a particular user as well as the inspiration id. Must be logged in.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inspiration_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/plans/": {
      "get": {
        "tags": ["plans"],
        "summary": "Retrieve all plans",
        "description": "This endpoint retrieves all plans.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["plans"],
        "summary": "Create a new plan",
        "description": "This endpoint creates a new plan. Must be logged in.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                },
                "inspiration_id": {
                  "type": "string",
                  "example": "any"
                },
                "plan_type": {
                  "type": "string",
                  "example": "any"
                },
                "plan": {
                  "type": "string",
                  "example": "any"
                },
                "schedule": {
                  "type": "string",
                  "example": "any"
                }
              },
              "required": ["user_id", "inspiration_id", "plan_type", "plan", "schedule"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/plans/{id}": {
      "get": {
        "tags": ["plans"],
        "summary": "Retrieve a single plan",
        "description": "This endpoint retrieves a single plan based on id.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["plans"],
        "summary": "Update a plan",
        "description": "This endpoint updates a plan based on id. Must be logged in.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "any"
                },
                "inspiration_id": {
                  "type": "string",
                  "example": "any"
                },
                "plan_type": {
                  "type": "string",
                  "example": "any"
                },
                "plan": {
                  "type": "string",
                  "example": "any"
                },
                "schedule": {
                  "type": "string",
                  "example": "any"
                }
              },
              "required": ["user_id", "inspiration_id", "plan_type", "plan", "schedule"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["plans"],
        "summary": "Delete a plan",
        "description": "This endpoint deletes a plan based on id. Must be logged in.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/plans/user_id/{user_id}": {
      "get": {
        "tags": ["plans"],
        "summary": "Retrieve all plans by a user",
        "description": "This endpoint retrieves all plans based on the id of a particular user. Must be logged in.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/plans/user_id/{user_id}/inspiration_id/{inspiration_id}": {
      "get": {
        "tags": ["plans"],
        "summary": "Retrieve all plans by a user and inspiration id",
        "description": "This endpoint retrieves all plans based on the id of a particular user as well as the id of the inspiration. Must be logged in.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "inspiration_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}